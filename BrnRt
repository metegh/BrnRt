-- === [Включение всех StealPrompt'ов] ===
local Players = game:GetService("Players")

local function findAndEnableStealPrompts()
    local allPrompts = {}

    for _, child in ipairs(workspace:GetDescendants()) do
        if child:IsA("ProximityPrompt") and child.Name == "StealPrompt" then
            table.insert(allPrompts, child)
        end
    end

    for _, prompt in ipairs(allPrompts) do
        prompt.Enabled = true
        print("Enabled StealPrompt in:", prompt:GetFullName())
    end

    return #allPrompts
end

task.spawn(function()
    while true do
        local count = findAndEnableStealPrompts()
        print("Found and enabled", count, "StealPrompts")
        task.wait(5)
    end
end)

-- === [Библиотека Fluent] ===
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "box" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

-- === [GoBack Кнопка с телепортацией к CharacterCollector] ===
Tabs.Main:AddButton({
    Title = "GoBack",
    Description = "Телепорт к твоему CharacterCollector",
    Callback = function()
        local player = Players.LocalPlayer
        local plots = workspace:FindFirstChild("Plots")

        if plots and player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPlot = plots:FindFirstChild(player.Name)
            if playerPlot and playerPlot:FindFirstChild("CharacterCollector") then
                player.Character.HumanoidRootPart.CFrame = playerPlot.CharacterCollector.CFrame + Vector3.new(0, 3, 0)
                print("Телепорт к CharacterCollector выполнен!")
            else
                warn("Не найден CharacterCollector в твоём Plot!")
            end
        else
            warn("Plot или персонаж не найден!")
        end
    end
})

-- === [Остальные элементы UI, как в твоём коде] ===
Tabs.Main:AddParagraph({
    Title = "Paragraph",
    Content = "This is a paragraph.\nSecond line!"
})

local Toggle = Tabs.Main:AddToggle("MyToggle", { Title = "Toggle", Default = false })
Toggle:OnChanged(function()
    print("Toggle changed:", Options.MyToggle.Value)
end)

local Slider = Tabs.Main:AddSlider("Slider", {
    Title = "Slider",
    Description = "This is a slider",
    Default = 2,
    Min = 0,
    Max = 5,
    Rounding = 1,
    Callback = function(Value)
        print("Slider was changed:", Value)
    end
})

Slider:OnChanged(function(Value)
    print("Slider changed:", Value)
end)

local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
    Title = "Dropdown",
    Values = {"one", "two", "three", "four"},
    Multi = false,
    Default = 1,
})

Dropdown:OnChanged(function(Value)
    print("Dropdown changed:", Value)
end)

local Colorpicker = Tabs.Main:AddColorpicker("Colorpicker", {
    Title = "Colorpicker",
    Default = Color3.fromRGB(96, 205, 255)
})

Colorpicker:OnChanged(function()
    print("Colorpicker changed:", Colorpicker.Value)
end)

local Keybind = Tabs.Main:AddKeybind("Keybind", {
    Title = "KeyBind",
    Mode = "Toggle",
    Default = "LeftControl",
    Callback = function(Value)
        print("Keybind clicked!", Value)
    end
})

-- === [SaveManager и InterfaceManager] ===
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
