--=============================
-- Включение всех StealPrompt
--=============================
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function findAndEnableStealPrompts()
    local allPrompts = {}
    local function searchInModel(model)
        for _, child in ipairs(model:GetDescendants()) do
            if child:IsA("ProximityPrompt") and child.Name == "StealPrompt" then
                table.insert(allPrompts, child)
            end
        end
    end

    searchInModel(workspace)

    for _, prompt in ipairs(allPrompts) do
        prompt.Enabled = true
        print("Enabled StealPrompt in:", prompt:GetFullName())
    end

    return #allPrompts
end

task.spawn(function()
    while true do
        local foundCount = findAndEnableStealPrompts()
        print("Found and enabled", foundCount, "StealPrompts")
        task.wait(5)
    end
end)

--=============================
-- Функция поиска CharacterCollector
--=============================
local function findCharacterCollector()
    local player = Players.LocalPlayer
    local plotsFolder = workspace:FindFirstChild("Plots")

    if plotsFolder and player then
        local playerPlot = plotsFolder:FindFirstChild(player.Name)
        if playerPlot and playerPlot:IsA("Model") then
            local collector = playerPlot:FindFirstChild("CharacterCollector", true)
            if collector and collector:IsA("BasePart") then
                print("CharacterCollector найден в:", collector:GetFullName())
                return collector
            else
                warn("CharacterCollector не найден в модели игрока!")
            end
        else
            warn("Модель с именем игрока не найдена в Plots!")
        end
    else
        warn("Папка Plots не найдена!")
    end
    return nil
end

--=============================
-- Телепортация на CharacterCollector
--=============================
local function teleportToCollector()
    local collector = findCharacterCollector()
    local character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
    if collector and character and character:FindFirstChild("HumanoidRootPart") then
        character:MoveTo(collector.Position + Vector3.new(0, 5, 0)) 
        -- +5 по Y, чтобы не застрять в парте
        print("Телепортирован на CharacterCollector:", collector.Position)
    else
        warn("Не удалось телепортировать (Collector или персонаж не найден)")
    end
end

--=============================
-- Загрузка библиотеки Fluent Renewed
--=============================
local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

local Window = Library:CreateWindow{
    Title = `Rebellion {0.0.1}`,
    SubTitle = "by metegh",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true,
    MinSize = Vector2.new(470, 380),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Main",
        Icon = "phosphor-users-bold"
    },
    Settings = Window:CreateTab{
        Title = "Settings",
        Icon = "settings"
    }
}

local Options = Library.Options

Library:Notify{
    Title = "Notification",
    Content = "This is a notification",
    SubContent = "SubContent",
    Duration = 5
}

--=============================
-- Кнопка GoBack (Телепорт)
--=============================
Tabs.Main:CreateButton{
    Title = "GoBack",
    Description = "Телепорт на CharacterCollector",
    Callback = function()
        teleportToCollector()
    end
}

--=============================
-- Toggle для примера
--=============================
local Toggle = Tabs.Main:CreateToggle("MyToggle", {Title = "Toggle", Default = false})
Toggle:OnChanged(function()
    print("Toggle changed:", Options.MyToggle.Value)
end)

Options.MyToggle:SetValue(false)

--=============================
-- SaveManager и InterfaceManager
--=============================
SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes{}
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Library:Notify{
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
}

SaveManager:LoadAutoloadConfig()
